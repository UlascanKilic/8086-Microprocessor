;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Cum Mar 11 2016
; Processor: 8086
; Compiler:  MASM32
;
; Before starting simulation set Internal Memory Size 
; in the 8086 model properties to 0x10000
;====================================================================
STAK    SEGMENT PARA STACK 'STACK'
        DW 20 DUP(?)
STAK    ENDS

DATA    SEGMENT PARA 'DATA'
ISIM   DB 75H, 6CH,61H,73H,63H,61H,6EH,20H
SAYI   DB 8
TUT     DB 0
DATA    ENDS

CODE    SEGMENT PARA 'CODE'
        ASSUME CS:CODE, DS:DATA, SS:STAK
START:
        MOV AX, DATA
	MOV DS, AX
	
	MOV DX, 020Ah ;Entegreyi Mode/Control/Sync moduna getirdim.
	MOV AL, 01001101B;Mode yazmacım : Baud rate factor : 1 , Number of data : 8 bit , No Parity Bit, Odd Parity Type, Number of stop bits : 1
	OUT DX, AL;Mode yazmacımı adrese out'luyorum.
	
	MOV AL, 40H ;Kontrol Yazmacım ile Internal Reset yapıyorum.
	OUT DX, AL
	
	MOV AL, 01001101B; Tekrardan Mode yazmacımı gönderdim.
	OUT DX, AL
	
	MOV AL, 00010101B; Son olarak durm yazmacımı belirtiyorum : Transmit Enable, Recieve Enable ve Reset Error flag bitlerini 1 yapıyorum.
	OUT DX, AL
	

ENDLESS:
	XOR CX,CX
	XOR SI,SI
	
	
 RAKAMOKU:     
 
	CALL RECIEVEREADY ;Recieve Ready kontrolü ile veriyi alıyorum.
	
	MOV CL,AL ; Klavyeden girilen rakamı oku.
	
	CMP CL, 37H ;Girilen değer 7 den büyük mü kontrolü.
	JA RAKAMOKU
	
	AND CL,0FH ;CL nin yüksek anlamlı 4 bitini maskeliyorum ve elimde sadece girilen rakam kalıyor.
	
	CMP CL, 00H; CL 0 mı girildi
	JE RAKAMOKU
	
	MOV TUT, CL ;CL değerini ileride kullanmak için saklıyorum.
	MOV BL, AL
	 
	CALL TRANSMITREADY ; Transmit Ready kontrolü ile veriyi yazdırıyorum.
		
	
DISDONGU:

	CALL RECIEVEREADY ;Recieve Ready kontrolü ile veriyi alıyorum.
	
	MOV BL,AL ;Girilen değeri BL ye alıyorum
	MOV AH ,ISIM[SI] ; ISIM dizimin SI.ncı elemanını AH ye alıyorum.
	
	CMP AH, BL; Girilen değer ve diziden aldığım değerler aynı mı diye kontrol ediyorum.
	JNE DISDONGU ;Yanlış harf girildiyse döngünün başına gidiyor.
	
	INC SI; Doğru harf girildiyse bir sonraki değeri seçmek için SI'yı artırıyorum.
	
	CALL TRANSMITREADY ;Transmit Ready kontrolü ile veriyi yazdırıyorum.
        
	LOOP DISDONGU ;Girilmiş olan rakam kadar(CL) sürecek bir döngü yapıyorum.
	 
	MOV BL, SAYI ;Dizimin uzunluğunu BL ye alıyorum
	SUB BL,TUT; Yukarıda girilen CL değerini bu değişkende saklamıştım. Dizi Boyutu - Girilen Rakam işlemi yaparak kaç tane karakter yazdırmam gerektiğini buluyorum.
	MOV CL,BL ; Kaç karakter yazdırmam gerektiğini bulup bunu döngüye sokmak için bulduğum değeri CL ye alıyorum.
	
SONDONGU:
	 	 
	MOV BL, ISIM[SI] ;Yazdırmam gereken harfi diziden çekiyorum. (SI değeri yukarıda girdiğim rakam kadar artırıldı ve sıfırlanmadığı için kaldığım yerden bir sonraki harfi alabiliyorum)
        CALL TRANSMITREADY ;Transmit Ready kontrolü ile veriyi yazdırıyorum.
	
	INC SI ;Bir sonraki harfi yazdırmak için SI yı artırıyorum.
	LOOP SONDONGU ;Hesapladığım CL değeri kadar döngü başlatıyorum.

        JMP ENDLESS
	
TRANSMITREADY PROC NEAR ;Transmit prosedürüm.

        MOV DX, 020AH; C = 1
KONTROL2:
	IN AL, DX ; Read işlemi yapacağım.
	AND AL, 01H ; Transmit ready mi kontrolü yapıyorum.
	JZ KONTROL2
	MOV DX, 0208H ; C = 0
	MOV AL, BL
	OUT DX, AL ; Write işlemi yapıcam
	RET
 TRANSMITREADY ENDP
 
 RECIEVEREADY PROC NEAR ; Recieve prosedürüm.
 
        MOV DX, 020AH ; C = 1  
KONTROL: 
        IN AL, DX ;  Read işlemi yapacağım.
	AND AL, 02H ; Recieve ready mi kontrolü yapıyorum.
	JZ KONTROL
	MOV DX, 0208H ; C = 0
	IN AL, DX ; Write işlemi yapıcam
	SHR AL, 1	
	RET
 RECIEVEREADY ENDP
	
	
CODE    ENDS
        END START